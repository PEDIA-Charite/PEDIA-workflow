configfile: "../../../config.yml"

def allSamples(a,b):
	samples = []
	samples.extend(a)
	samples.extend(b)
	return samples


VCF_SAMPLES = config['VCF_SAMPLES']
TEST_SAMPLES = config['TEST_SAMPLES']
SAMPLES = allSamples(VCF_SAMPLES, TEST_SAMPLES)

rule all:
	input:
		expand("sorted/{sample}.vcf.gz", sample=SAMPLES),
		expand("sorted/{sample}.vcf.gz.tbi", sample=SAMPLES),
		expand("annotated_vcfs/{sample}_annotated.vcf.gz", sample=SAMPLES),
		expand("annotated_vcfs/{sample}_annotated.vcf.gz.tbi", sample=SAMPLES)

rule decompress:
	input:
		"original/{sample}.vcf.gz"
	output:
		temp("original/{sample}.vcf")
	shell:
		"""
		bgzip -d -c {input} | awk '{{gsub(/chr/,""); print}}' | awk '{{if($1!="M" && $5!=".") print $0}}' > {output}
		"""

rule sort:
	input:
		"original/{sample}.vcf"
	output:
		"sorted/{sample}.vcf.gz"
	shell:
		"""
		(cat '{input}' | egrep "^#"; cat '{input}' | egrep -v "^#" | sort -k1,1 -k2,2n) | bgzip -c > '{output}'
		"""

rule index_sorted:
	input:
		"sorted/{sample}.vcf.gz"
	output:
		"sorted/{sample}.vcf.gz.tbi"
	shell:
		"tabix '{input}'"

rule annotate:
	input:
		vcf="sorted/{sample}.vcf.gz",
		vcf_index="sorted/{sample}.vcf.gz.tbi",
		db="../../jannovar/data/hg19_refseq.ser",
		exac="../../populationDBs/ExAC.r1.sites.vep.vcf.gz",
		uk="../../populationDBs/UK10K_COHORT.20160215.sites.vcf.gz",
		dbsnp="../../dbSNPs/b147/All_20160601.vcf.gz",
		caddsnv="../../pathogenicityScores/whole_genome_SNVs.tsv.gz",
		caddindel="../../pathogenicityScores/InDels.tsv.gz",
		ref="../../referenceGenome/data/human_g1k_v37.fasta"
	output:
		"annotated_vcfs/{sample}_annotated.vcf.gz"
	shell:
	    "java -jar ../../jannovar/jannovar-cli-0.21-SNAPSHOT.jar annotate-vcf -d {input.db} --dbsnp-vcf {input.dbsnp} --exac-vcf {input.exac} --uk10k-vcf {input.uk} --tabix {input.caddsnv} {input.caddindel} --tabix-prefix CADD_SNV_ CADD_INDEL_ --ref-fasta {input.ref} -o '{output}' -i '{input.vcf}'"

rule index_annotated:
	input:
		"annotated_vcfs/{sample}_annotated.vcf.gz"
	output:
		"annotated_vcfs/{sample}_annotated.vcf.gz.tbi"
	shell:
		"tabix '{input}'"

rule filter:
	input:
		"annotated_vcfs/{sample}_annotated.vcf.gz"
	output:
		"filtered_vcfs/{sample}_annotated.vcf.gz"
	shell:
		"""
		bcftools view -e 'INFO/EXAC_HOM_ALL>2' {input} | sed -e 's/nan/NaN/g' | bgzip -c > {output}
		"""

rule index_filter:
	input:
		"filtered_vcfs/{sample}_annotated.vcf.gz"
	output:
		"filtered_vcfs/{sample}_annotated.vcf.gz.tbi"
	shell:
		"""
		tabix {input}
		"""
